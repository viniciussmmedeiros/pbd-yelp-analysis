"Sort  (cost=1166778.51..1167652.30 rows=349514 width=150) (actual time=23163.766..23163.781 rows=100 loops=1)"
"  Sort Key: rr.match_count DESC, rr.date DESC, rr.stars DESC"
"  Sort Method: quicksort  Memory: 72kB"
"  ->  Subquery Scan on rr  (cost=1093457.68..1108312.03 rows=349514 width=150) (actual time=23160.737..23162.190 rows=100 loops=1)"
"        ->  WindowAgg  (cost=1093457.68..1104816.89 rows=349514 width=158) (actual time=23160.733..23162.174 rows=100 loops=1)"
"              Run Condition: (row_number() OVER (?) <= 10)"
"              ->  Sort  (cost=1093457.68..1094331.47 rows=349514 width=818) (actual time=23160.538..23160.783 rows=1468 loops=1)"
"                    Sort Key: mb.business_id, ((r.review_data ->> 'date'::text)) DESC"
"                    Sort Method: quicksort  Memory: 1187kB"
"                    ->  Hash Join  (cost=7274.07..808009.20 rows=349514 width=818) (actual time=5855.178..23150.690 rows=1468 loops=1)"
"                          Hash Cond: ((r.review_data ->> 'business_id'::text) = mb.business_id)"
"                          ->  Seq Scan on review r  (cost=0.00..761414.80 rows=6990280 width=755) (actual time=2.091..11690.386 rows=6990280 loops=1)"
"                          ->  Hash  (cost=7273.95..7273.95 rows=10 width=31) (actual time=5575.722..5575.729 rows=10 loops=1)"
"                                Buckets: 1024  Batches: 1  Memory Usage: 9kB"
"                                ->  Subquery Scan on mb  (cost=7273.82..7273.95 rows=10 width=31) (actual time=5575.704..5575.713 rows=10 loops=1)"
"                                      ->  Limit  (cost=7273.82..7273.85 rows=10 width=63) (actual time=5575.661..5575.667 rows=10 loops=1)"
"                                            ->  Sort  (cost=7273.82..7273.85 rows=10 width=63) (actual time=5038.004..5038.009 rows=10 loops=1)"
"                                                  Sort Key: (count(*)) DESC, ((b.business_data ->> 'categories'::text)), b.business_id"
"                                                  Sort Method: top-N heapsort  Memory: 28kB"
"                                                  ->  GroupAggregate  (cost=7273.43..7273.66 rows=10 width=63) (actual time=5032.129..5036.656 rows=7527 loops=1)"
"                                                        Group Key: b.business_id, ((b.business_data ->> 'categories'::text))"
"                                                        ->  Sort  (cost=7273.43..7273.46 rows=10 width=55) (actual time=5031.620..5032.324 rows=14538 loops=1)"
"                                                              Sort Key: b.business_id, ((b.business_data ->> 'categories'::text))"
"                                                              Sort Method: quicksort  Memory: 2003kB"
"                                                              ->  Nested Loop  (cost=6.30..7273.26 rows=10 width=55) (actual time=563.409..5008.968 rows=14538 loops=1)"
"                                                                    ->  ProjectSet  (cost=0.42..8.50 rows=10 width=96) (actual time=8.038..8.091 rows=14 loops=1)"
"                                                                          ->  Index Scan using idx_business_id on business  (cost=0.42..8.44 rows=1 width=938) (actual time=7.636..7.640 rows=1 loops=1)"
"                                                                                Index Cond: (business_id = 'dLXkx82ZMsR5NLkCRtg0Dw'::text)"
"                                                                    ->  Bitmap Heap Scan on business b  (cost=5.88..726.45 rows=1 width=961) (actual time=44.317..356.868 rows=1038 loops=14)"
"                                                                          Recheck Cond: ((business_data ->> 'city'::text) = ((business.business_data ->> 'city'::text)))"
"                                                                          Filter: ((business_data ->> 'categories'::text) ~~* (('%'::text || TRIM(BOTH FROM (unnest(string_to_array((business.business_data ->> 'categories'::text), ','::text))))) || '%'::text))"
"                                                                          Rows Removed by Filter: 13531"
"                                                                          Heap Blocks: exact=155722"
"                                                                          ->  Bitmap Index Scan on idx_business_city  (cost=0.00..5.88 rows=194 width=0) (actual time=2.351..2.351 rows=14569 loops=14)"
"                                                                                Index Cond: ((business_data ->> 'city'::text) = ((business.business_data ->> 'city'::text)))"
"Planning Time: 60.745 ms"
"JIT:"
"  Functions: 36"
"  Options: Inlining true, Optimization true, Expressions true, Deforming true"
"  Timing: Generation 45.985 ms, Inlining 134.340 ms, Optimization 252.988 ms, Emission 150.606 ms, Total 583.919 ms"
"Execution Time: 23211.957 ms"